<launch>
    <arg name="num_robots" default="1"/>
    <arg name="valgrind" default="false"/>
    <arg name="gdb" default="false"/>

    <arg name="prefix" value="$(eval 'valgrind --tool=callgrind --callgrind-out-file=/tmp/callgrind.out' if arg('valgrind') else 'gdb --args' if arg('gdb') else '')"/>
    <node name="pulsar_localisation" pkg="pulsar_localisation"
          type="localisation_node" output="screen"
          launch-prefix="$(arg prefix)">

        <!-- Map is on the topic '<topic>' -->
        <param name="map_topic" value="map"/>

        <!-- Robot Odometry noise parameters. See Probabilistic Robotics by
             Thrun et al. -->
        <!-- noise in rotation estimate due to rotation -->
        <param name="a1" value="0.00001"/>
        <!-- noise in rotation estimate due to translation -->
        <param name="a2" value="0.01"/>
        <!-- noise in translation estimate due to translation -->
        <param name="a3" value="0.1"/>
        <!-- noise in translation estimate due to rotation -->
        <param name="a4" value="0.00001"/>
        <!-- Exponential parameters for augmented MCL, 0 <= aslow < afast.
             See Probabilistic Robotics by Thrun et al. -->
        <param name="aslow" value="0.001"/>
        <param name="afast" value="0.1"/>

        <!-- How many sensor data points should be stored for each update
             cycle. The larger this is the slower the algorithm will
             perform. This should be a multiple of the number of sensors
             on the robots. -->
        <param name="cycle_sensor_readings" value="9"/>
        <!-- 0.01 second resolution in time keeping for the range sensor
             model -->
        <param name="time_resolution" value="0.01"/>

        <!-- Robots are called pulsar_X -->
        <param name="robot0" value="pulsar_"/>
        <!-- X ranges from 0 to <quantity> -->
        <param name="robot0_quantity" value="$(arg num_robots)"/>
        <!-- Robots have odometry on the topic 'pulsar_X/<topic>' -->
        <param name="robot0_odom_topic" value="odometry/filtered"/>
        <!-- Robots have base_links with frame name 'pulsar_X/<name>' -->
        <param name="robot0_base_link_frame" value="base_link"/>
        <!-- Robots have range sensors on the topic 'pulsar_X/<topic>' -->
        <param name="robot0_range_topic0" 
               value="left_range_finder/range"/>
        <param name="robot0_range_topic1"
               value="middle_range_finder/range"/>
        <param name="robot0_range_topic2"
               value="right_range_finder/range"/>
        
        <!-- Intrinsic parameters of the range sensors. See Probabilistic
             Robotics by Thrun et al. -->
        <param name="zhit"     value="0.8028"/>
        <param name="zshort"   value="0.1461"/>
        <param name="zmax"     value="0.0152"/>
        <param name="zrand"    value="0.2139"/>
        <param name="sigmahit" value="0.0200"/>
        <param name="lamshort" value="2.733"/>

        <!-- Exponential parameter representing how unreliable old data is 
             considered to be. >= 0, larger = more unreliable-->
        <param name="ztime" value="5"/>

        <!-- Number of particles to be included in the MCL filter -->
        <param name="num_particles" value="500"/>

        <!-- Minimum number of pose estimates within a cluster to be
             considered as a cluster -->
        <param name="dbscan_min_points" value="5"/>
        <!-- Clustering epsilon parameter (metres^2) -->
        <param name="dbscan_epsilon" value="0.0016"/>

        <!-- Minimum translational motion for a robot to update its filter
             -->
        <param name="min_trans_update" value="0.004"/>
        <!-- Minim rotational motion for a robot to update its filter -->
        <param name="min_rot_update" value="0.1"/>
    </node>
</launch>
